"""
This script detects faces in an image using OpenCV's Haar Cascade Classifier.
This script is generated by GPT-4o.
XML file: `haarcascade_frontalface_default.xml`
"""

import cv2

# 1. Load the Haar feature classifier XML file
haar_cascade_path = cv2.data.haarcascades + "haarcascade_frontalface_default.xml"
face_cascade = cv2.CascadeClassifier(haar_cascade_path)

# 2. Load the image
image_path = "./face_examples/meme_nick_young.webp"  # My image path
image = cv2.imread(image_path)
if image is None:
    raise FileNotFoundError(f"Image file not found at {image_path}")

# 3. Convert the image to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# 4. Perform face detection
faces = face_cascade.detectMultiScale(
    gray_image,
    scaleFactor=1.05,  # Reduce the scale factor
    minNeighbors=5,    # Reduce the number of neighbors
    minSize=(30, 30)
)

print(f"Found {len(faces)} faces")

# 5. Draw rectangles around detected faces
for (x, y, w, h) in faces:
    print(f"Face found at x: {x}, y: {y}, width: {w}, height: {h}")
    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)  # Green border

# 6. Display the result
cv2.imshow("Detected Faces", image)
cv2.waitKey(0)
cv2.destroyAllWindows()
